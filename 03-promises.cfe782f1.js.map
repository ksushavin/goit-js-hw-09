{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,WAAYC,SAASC,cAAc,uBACnCC,KAAMF,SAASC,cAAc,sBAC7BE,OAAQH,SAASC,cAAc,wBAC/BG,kBAAmBJ,SAASC,cAAc,gBAG5CH,EAAKM,kBAAkBC,iBAAiB,SAExC,SAAkCC,G,kBAY9B,IAAIC,EAAWC,EAAG,EACdC,EAAQV,EAAYS,EAAIN,EAC5BQ,QAAQC,IAAI,WAAYJ,GACxBG,QAAQC,IAAI,QAASF,GAIOG,YAAjB,WAcf,IAAuBC,EAAUC,EACzBC,GADeF,EAbHN,EAaaO,EAbHL,EActBM,EAAgBC,KAAKC,SAAW,GAE/B,IAAIC,SAAQ,SAACC,EAASC,GACvBL,EACFI,EAAS,CACPN,WACAC,UAGFM,EAAQ,CACNP,WACAC,S,KAxBCO,MAAK,SAAAC,G,IAAGT,EAAQS,EAART,SAAUC,EAAKQ,EAALR,MACjBlB,EAAA2B,OAAOC,QAAQ,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,IAG9DY,OAAM,SAAAJ,G,IAAGT,EAAQS,EAART,SAAUC,EAAKQ,EAALR,MAClBlB,EAAA2B,OAAOI,QAAQ,sBAAuCF,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,MAG/DL,E,EA3BLH,EAAIsB,iBASJ,IARA,IAAM1B,EAAO2B,OAAO/B,EAAKI,KAAK4B,OACxB3B,EAAS0B,OAAO/B,EAAKK,OAAO2B,OAC5B/B,EAAa8B,OAAO/B,EAAKC,WAAW+B,OAMjCC,EAAI,EAAGA,EAAI5B,EAAQ4B,GAAG,EAACC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst Refs = {\n  firstDelay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  createPromisesBtn: document.querySelector('form button')\n}\n\nRefs.createPromisesBtn.addEventListener(\"click\", onCreatePromisesBtnClick);\n\nfunction onCreatePromisesBtnClick(evt) {\n  // Витягуємо введені в інпути значення\n  evt.preventDefault();\n  const step = Number(Refs.step.value);\n  const amount = Number(Refs.amount.value);\n  const firstDelay = Number(Refs.firstDelay.value);\n  // console.log(step);\n  // console.log(amount);\n  // console.log(firstDelay);\n\n  // На кожній ітерації вираховуємо номер промісу і його затримку\n  for (let i = 0; i < amount; i+=1) {\n    let position = i +1;\n    let delay = firstDelay+(i * step);\n    console.log('position', position);\n    console.log('delay', delay);\n\n    // Викликаємо createPromise на кожній ітерації з відповідною затримкою та \n    // відразу передаємо результати в then і catch.\n    setTimeout(() => {\n      createPromise(position, delay)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n          // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n          // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        })\n    }, delay);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  \n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve ({\n        position,\n        delay\n      })\n    } else {\n      reject ({\n        position,\n        delay\n      })\n    }\n  })\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$Refs","firstDelay","document","querySelector","step","amount","createPromisesBtn","addEventListener","evt","position1","i","delay1","console","log","setTimeout","position","delay","shouldResolve","Math","random","Promise","resolve","reject","then","param","Notify","success","concat","catch","failure","preventDefault","Number","value","i1","_loop"],"version":3,"file":"03-promises.cfe782f1.js.map"}